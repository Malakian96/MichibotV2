name: Deploy Michibot to Raspberry Pi

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build the Docker image for ARM
      - name: Build Docker image for ARM
        run: |
          docker buildx build --platform linux/arm/v7 -t michibot .

      # Step 4: Verify Docker image exists
      - name: Verify Docker image exists
        run: |
          docker images
          docker images | grep "michibot"

      # Step 5: Save the Docker image as a .tar  file
      - name: Save Docker image
        run: |
          docker save michibot > michibot.tar

      # Step 6: Copy the Docker image to Raspberry Pi
      - name: Transfer image to Raspberry Pi
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "michibot.tar"
          target: "/home/alvaro/"

      # Step 7: Load and restart the Docker container on Raspberry Pi
      - name: Deploy on Raspberry Pi
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Load the Docker image
            docker load < /home/alvaro/michibot.tar
            
            # Stop and remove existing container
            docker stop michibot || true
            docker rm michibot || true
            
            # Create credentials file
            echo '${{ secrets.GOOGLE_APPLICATION_JSON }}' > /home/alvaro/${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

            # Run the new container
            docker run -d --network nginx-proxy-network --name michibot -p 8080:3000 \
              -e CLIENT_ID=${{ secrets.CLIENT_ID }} \
              -e TOKEN=${{ secrets.TOKEN }} \
              -e BOT_ID=${{ secrets.BOT_ID }} \
              -e OAUTH_GOOGLE=${{ secrets.OAUTH_GOOGLE }} \
              -e GOOGLE_APPLICATION_CREDENTIALS="${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" \
              michibot:latest

            echo "Deployment complete!"
