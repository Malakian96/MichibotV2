name: Deploy MichiBot v2 to Raspberry Pi

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # GitHub runner runs on Ubuntu, which is compatible for building Docker

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for multi-architecture support, e.g., ARM for Raspberry Pi)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or another registry, replace with your credentials)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}   # Docker Hub username (add to GitHub Secrets)
          password: ${{ secrets.DOCKER_PASSWORD }}   # Docker Hub password (add to GitHub Secrets)

      # Step 4: Build and push the Docker image to Docker Hub (or another registry)
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/michibot-v2:latest  # Tag image for deployment
          platforms: linux/arm64  # Target ARM architecture for Raspberry Pi

      # Step 5: Deploy to Raspberry Pi via SSH
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.RPI_HOST }}        # Raspberry Pi IP address (add to GitHub Secrets)
          username: ${{ secrets.RPI_USER }}    # Raspberry Pi username (e.g., pi) (add to GitHub Secrets)
          key: ${{ secrets.RPI_SSH_KEY }}      # Private SSH key for Raspberry Pi (add to GitHub Secrets)
          script: |
            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/michibot-v2:latest
            # Stop and remove the previous running container
            docker stop michibot-v2 || true
            docker rm michibot-v2 || true
            # Run the bot in the background
            docker run -d --name michibot-v2 \
              -e CLIENT_ID=${{ secrets.CLIENT_ID }} \
              -e TOKEN=${{ secrets.TOKEN }} \
              -e BOT_ID=${{ secrets.BOT_ID }} \
              -e OAUTH_GOOGLE=${{ secrets.OAUTH_GOOGLE }} \
              -e GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }} \
              -v /home/pi/michibot-logs:/usr/src/app/logs \  # Adjust path to Raspberry Pi's log directory
              -p 3000:3000 \
              ${{ secrets.DOCKER_USERNAME }}/michibot-v2:latest
