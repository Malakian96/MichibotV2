name: Build and Deploy Michibot to Raspberry Pi

on:
  push:
    branches:
      - master  # Trigger deployment when pushing to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build the Docker image for ARM
      - name: Build Docker image for ARM
        run: |
          docker buildx build --platform linux/arm/v7 -t ${{ secrets.DOCKER_NAME }}/michibot:latest --load .

      # Step 4: Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_NAME }}/michibot:latest

      # Step 6: SSH into Raspberry Pi and deploy the container
      - name: Deploy on Raspberry Pi
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Pull the Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_NAME }}/michibot:latest

            # Stop and remove the existing container (if it exists)
            docker stop michibot || true
            docker rm michibot || true
            
            # Create credentials file
            echo '${{ secrets.GOOGLE_APPLICATION_JSON }}' > /home/alvaro/${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

            # Run the new container
            docker run -d --network nginx-proxy-network --name michibot -p 8080:3000 \
              -e CLIENT_ID=${{ secrets.CLIENT_ID }} \
              -e TOKEN=${{ secrets.TOKEN }} \
              -e BOT_ID=${{ secrets.BOT_ID }} \
              -e OAUTH_GOOGLE=${{ secrets.OAUTH_GOOGLE }} \
              -e GOOGLE_APPLICATION_CREDENTIALS="${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" \
              ${{ secrets.DOCKER_NAME }}/michibot

            echo "Deployment complete!"
